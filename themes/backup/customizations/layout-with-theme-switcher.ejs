<!DOCTYPE html>
<html>
<%- partial('_partial/head') %>
<style>
/* ===== 主题切换器样式 ===== */
/* 配色方案定义 */
:root {
  --primary-color: #3498db;
  --background-color: #ffffff;
  --text-color: #333333;
  --accent-color: #e74c3c;
  --header-bg: #f8f9fa;
  --border-color: #e0e0e0;
}

[data-theme="dark"] {
  --primary-color: #2980b9;
  --background-color: #1a1a1a;
  --text-color: #f0f0f0;
  --accent-color: #c0392b;
  --header-bg: #2d2d2d;
  --border-color: #444444;
}

[data-theme="green"] {
  --primary-color: #27ae60;
  --background-color: #f8fff8;
  --text-color: #2c3e50;
  --accent-color: #e67e22;
  --header-bg: #e8f5e8;
  --border-color: #c8e6c9;
}

/* 基础样式 */
body {
  background-color: var(--background-color);
  color: var(--text-color);
  transition: background-color 0.3s ease, color 0.3s ease;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  font-size: 14px;
  line-height: 1.6;
  margin: 0;
  padding: 0;
}

a {
  color: var(--primary-color);
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

.post {
  border: 1px solid var(--border-color);
  background: var(--background-color);
  margin: 20px 0;
  padding: 20px;
  border-radius: 8px;
}

.header {
  background-color: var(--header-bg);
  border-bottom: 1px solid var(--border-color);
}

/* 强制主题切换器样式 */
.theme-switcher {
  position: fixed !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  z-index: 999999 !important;
  background: rgba(255, 255, 255, 0.98) !important;
  border: 3px solid #e74c3c !important;
  border-radius: 15px !important;
  padding: 20px !important;
  box-shadow: 0 0 50px rgba(0,0,0,0.5) !important;
  width: auto !important;
  height: auto !important;
  display: block !important;
  visibility: visible !important;
  opacity: 1 !important;
}

.theme-options {
  display: flex !important;
  flex-direction: column !important;
  gap: 12px !important;
  width: 150px !important;
}

.theme-btn {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  gap: 8px !important;
  padding: 12px !important;
  background: #f8f9fa !important;
  border: 2px solid #dee2e6 !important;
  border-radius: 8px !important;
  cursor: pointer !important;
  font-size: 14px !important;
  font-weight: 500 !important;
  color: #333 !important;
  transition: all 0.3s ease !important;
  width: 100% !important;
}

.theme-btn:hover {
  background: #e9ecef !important;
  transform: scale(1.05) !important;
}

.theme-btn.active {
  background: #3498db !important;
  color: white !important;
  border-color: #3498db !important;
}

.theme-icon {
  font-size: 16px !important;
}

.theme-name {
  font-size: 12px !important;
  font-weight: 500 !important;
}

/* 响应式设计 */
@media (max-width: 768px) {
  .theme-switcher {
    top: 40% !important;
    padding: 15px !important;
  }
  
  .theme-options {
    width: 130px !important;
  }
  
  .theme-btn {
    padding: 10px !important;
    font-size: 13px !important;
  }
}

/* 确保其他元素不会覆盖切换器 */
.header,
.footer,
.article-entry,
.post,
.content-wrap {
  position: relative;
  z-index: 1;
}
</style>
<body>
  <div id="container">
    <div id="wrap">
      <%- partial('_partial/header', null, {cache: !config.relative_link}) %>
      <div class="outer">
        <section id="main"><%- body %></section>
        <% if (theme.sidebar && theme.sidebar !== 'bottom'){ %>
          <%- partial('_partial/sidebar', null, {cache: !config.relative_link}) %>
        <% } %>
      </div>
      <%- partial('_partial/footer', null, {cache: !config.relative_link}) %>
    </div>
    <%- partial('_partial/mobile-nav', null, {cache: !config.relative_link}) %>
    <%- partial('_partial/after-footer') %>
  </div>
  
  <script>
  // 主题管理功能
  function initTheme() {
    const savedTheme = localStorage.getItem('theme') || 'light';
    setTheme(savedTheme);
  }

  function setTheme(themeName) {
    document.documentElement.setAttribute('data-theme', themeName);
    localStorage.setItem('theme', themeName);
    
    document.querySelectorAll('.theme-btn').forEach(btn => {
      btn.classList.toggle('active', btn.dataset.theme === themeName);
    });
  }

  function bindThemeEvents() {
    document.addEventListener('click', function(e) {
      if (e.target.closest('.theme-btn')) {
        const themeBtn = e.target.closest('.theme-btn');
        setTheme(themeBtn.dataset.theme);
        
        // 移动端触觉反馈（如果支持）
        if (window.navigator.vibrate) {
          window.navigator.vibrate(10);
        }
      }
    });

    // 键盘快捷键 (Alt + T 循环切换主题)
    document.addEventListener('keydown', function(e) {
      if (e.altKey && e.key === 't') {
        e.preventDefault();
        const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';
        const themes = ['light', 'dark', 'green'];
        const currentIndex = themes.indexOf(currentTheme);
        const nextIndex = (currentIndex + 1) % themes.length;
        setTheme(themes[nextIndex]);
      }
    });
  }

  // 动态创建主题切换器
  document.addEventListener('DOMContentLoaded', function() {
    console.log('=== 主题切换器脚本开始执行 ===');
    
    // 如果切换器已经存在，跳过
    if (document.querySelector('.theme-switcher')) {
      console.log('主题切换器已存在');
      return;
    }
    
    console.log('开始创建主题切换器');
    
    // 创建切换器HTML
    const switcherHTML = `
      <div class="theme-switcher">
        <div class="theme-options">
          <button class="theme-btn" data-theme="light" title="浅色模式">
            <span class="theme-icon">☀️</span>
            <span class="theme-name">浅色</span>
          </button>
          <button class="theme-btn" data-theme="dark" title="深色模式">
            <span class="theme-icon">🌙</span>
            <span class="theme-name">深色</span>
          </button>
          <button class="theme-btn" data-theme="green" title="绿色主题">
            <span class="theme-icon">🌿</span>
            <span class="theme-name">绿色</span>
          </button>
        </div>
      </div>
    `;
    
    // 插入到页面中
    document.body.insertAdjacentHTML('beforeend', switcherHTML);
    console.log('主题切换器已插入到页面');
    
    // 初始化主题和事件绑定
    initTheme();
    bindThemeEvents();
    console.log('主题初始化完成');
  });
  </script>
</body>
</html>